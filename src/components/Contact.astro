---
const { title, description, twitter,  instagram, github} = Astro.props;
---

<footer id="contact" class="panel">
  <div class="inner split">
    <div>
      <section>
        <h2>{title}</h2>
        <p>{description}</p>
      </section>
      <section>
        <h2>Find me on ...</h2>
        <ul class="icons">
          <li><a href="https://twitter.com/stellaeprop" class="icon brands fa-twitter"><span class="label">Twitter</span></a></li>
          <li><a href="https://www.instagram.com/stellaeprop/" class="icon brands fa-instagram"><span class="label">Instagram</span></a></li>
          <li><a href="https://github.com/woguls" class="icon brands fa-github"><span class="label">GitHub</span></a></li>
          <li><a href="https://discordapp.com/users/1029178471043301417" class="icon brands fa-discord"><span class="label">GitHub</span></a></li>
        </ul>
      </section>

    </div>
    <div>
      
      <section>
        <h2>Get in touch... (coming soon)</h2>
        <form id="contactForm">
          <div class="fields">
            <div class="field half">
              <input type="text" name="name" id="name" placeholder="Name" />
            </div>
            <div class="field half">
              <input type="text" name="email" id="email" placeholder="Email" />
            </div>
            <div class="field">
              <textarea name="message" id="message" rows="4" placeholder="Message"></textarea>
            </div>
          </div>
          <ul class="actions">
            <li><input type="submit" value="Send" class="primary, g-recaptcha"/></li>
            <li><input type="reset" value="Reset" /></li>
          </ul>
        </form>
      </section>


      <script >
        import { initializeApp, getApps } from 'firebase/app';
        import { getDatabase, ref, push } from "firebase/database";
        import { initializeAppCheck, ReCaptchaV3Provider } from "firebase/app-check";

        const firebaseConfig = {
         apiKey: import.meta.env.PUBLIC_APIKEY,
          authDomain: import.meta.env.PUBLIC_AUTHDOMAIN,
          projectId: import.meta.env.PUBLIC_PROJECTID,
          storageBucket: import.meta.env.PUBLIC_SORAGEBUCKET,
          messagingSenderId: import.meta.env.PUBLIC_MESSAGINGSENDERID,
          appId: import.meta.env.PUBLIC_APPID,
          measurementId: import.meta.env.PUBLIC_MEASUREMENTID,
          databaseURL: import.meta.env.PUBLIC_DATABASEURL
        };

        const app = initializeApp(firebaseConfig);
        const appCheck = initializeAppCheck(app, {
          provider: new ReCaptchaV3Provider(import.meta.env.PUBLIC_RECAPTCHA_SITE_KEY),
          isTokenAutoRefreshEnabled: true
        });

        document.getElementById('contactForm').addEventListener('submit', submitForm );
        
        function submitForm(e) {
          e.preventDefault();
          var name = getFromForm('name');
          var email = getFromForm('email');
          var message = getFromForm('message');
          sendMessage(name, email, message);

        }

        function sendMessage(name, email, message) {
          const database = getDatabase(app);
          const currentDate = new Date();
          const date = currentDate.getDate() + "/" + (currentDate.getMonth() +1) +"/" + currentDate.getFullYear();
          const time = currentDate.getHours() + ":" + currentDate.getMinutes() + ":" + currentDate.getSeconds();
          push(ref(database, 'messages'), {
            timestamp: { date: date, time: time },
            name: name,
            email: email,
            message: message
          });
        }

        function getFromForm(id) {
          return document.getElementById(id).value;
        }

      </script>
      
    </div>
  </div>
</footer>
